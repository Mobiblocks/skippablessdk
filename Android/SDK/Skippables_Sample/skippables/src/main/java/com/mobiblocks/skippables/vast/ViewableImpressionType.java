//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.12.14 at 03:40:33 PM EET 
//


package com.mobiblocks.skippables.vast;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;

import java.net.URL;
import java.util.ArrayList;
import java.util.List;


/**
 * 
 * 				The ViewableImpression element allows for tracking URIs to report viewability
 * 			
 * 
 * <p>Java class for ViewableImpression_type complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ViewableImpression_type">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="Viewable" type="{http://www.w3.org/2001/XMLSchema}anyURI" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="NotViewable" type="{http://www.w3.org/2001/XMLSchema}anyURI" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="ViewUndetermined" type="{http://www.w3.org/2001/XMLSchema}anyURI" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
public class ViewableImpressionType {

    protected List<URL> viewable;
    protected List<URL> notViewable;
    protected List<URL> viewUndetermined;
    protected String id;

    /**
     * Gets the value of the viewable property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the viewable property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getViewable().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link URL }
     * 
     * 
     */
    @Nullable
    public List<URL> getViewable() {
        return this.viewable;
    }
    
    public void addViewable(@NonNull URL url) {
        if (viewable == null) {
            viewable = new ArrayList<>();
        }
        viewable.add(url);
    }

    /**
     * Gets the value of the notViewable property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the notViewable property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNotViewable().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link URL }
     * 
     * 
     */
    @Nullable
    public List<URL> getNotViewable() {
        return this.notViewable;
    }

    public void addNotViewable(@NonNull URL url) {
        if (notViewable == null) {
            notViewable = new ArrayList<>();
        }
        notViewable.add(url);
    }

    /**
     * Gets the value of the viewUndetermined property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the viewUndetermined property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getViewUndetermined().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link URL }
     * 
     * 
     */
    @Nullable
    public List<URL> getViewUndetermined() {
        return this.viewUndetermined;
    }

    public void addViewUndetermined(@NonNull URL url) {
        if (viewUndetermined == null) {
            viewUndetermined = new ArrayList<>();
        }
        viewUndetermined.add(url);
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

}
